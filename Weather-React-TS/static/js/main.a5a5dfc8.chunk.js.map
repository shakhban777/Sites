{"version":3,"sources":["components/online-status/offline.svg","api/api.ts","components/title/title.tsx","components/selectors/select-city/select-city.tsx","assets/img/placeholder.svg","components/placeholder/placeholder.tsx","assets/img/icons/arrow-left.svg","components/forecast/left-arrow/left-arrow.tsx","assets/img/icons/arrow-right.svg","components/forecast/right-arrow/right-arrow.tsx","components/weather-cards/weather-card.tsx","components/forecast/weather/weather.tsx","components/selectors/select-date/select-date.tsx","components/forecast/forecast.tsx","components/online-status/online-status.tsx","components/app/app.tsx","reportWebVitals.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["_g","WeatherApiService","_apiKey","_baseURL","symbolOfWeather","temperature","fetchFromServer","urlToFetch","a","fetch","dataFromServer","ok","Error","status","json","getWeatherForSevenDays","lat","lon","weatherForSevenDaysUrl","weatherDataForSevenDaysJson","weatherForSevenDaysArrays","daily","map","day","temp","id","dt","icon","weather","find","el","date","Date","toLocaleString","year","month","split","join","Math","round","toString","getWeatherForHistoricDate","weatherForHistoricDateUrlToFetch","weatherForHistoricDateJson","weatherOfHistoricDay","current","console","error","Title","className","SelectCity","cities","onChangeLocation","blockSelect","useState","isActive","setIsActive","styleClass","onFocus","onBlur","onChange","event","target","value","blur","hidden","city","name","Placeholder","src","placeholder","alt","LeftArrowBlock","scrollToThePrevForecast","onClick","arrowLeft","RightArrowBlock","scrollToTheNextForecast","arrowRight","WeeklyCard","HistoricCard","image","text","WeatherCard","Weather","sevenDaysWeatherData","showAllWeatherCardsForSevenDays","onPreviousDay","onNextDay","leftArrow","rightArrow","obj","SelectDate","onChangeDate","isFocused","setIsFocused","minDays","now","oneDay","toISOString","slice","maxDays","opacityStyle","type","style","opacity","min","max","parse","onInput","WeeklyForecast","showSevenDaysForecast","title","HistoricForecast","showHistoricForecast","historicWeatherData","weatherOrPlaceholder","Forecast","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgOffline","_ref","svgRef","titleId","props","xmlns","xmlnsXlink","x","y","viewBox","enableBackground","xmlSpace","ref","d","ForwardRef","OnlineStatus","isOnline","setIsOnline","handleNetworkChange","navigator","onLine","useEffect","window","addEventListener","App","windowWidth","React","innerWidth","width","setWidth","updateWidth","removeEventListener","useWindowDimensions","location","setLocation","setDate","setSevenDaysWeatherData","setHistoricWeatherData","setShowSevenDaysForecast","setShowHistoricForecast","setShowAllWeatherCardsForSevenDays","weatherDays","setWeatherDays","locationForSevenDaysWeather","locationForHistoricWeather","then","response","historicForecast","changeLocationHandler","coords","setNewLocation","latitude","longitude","newLocation","prevState","log","geolocation","getCurrentPosition","position","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","headers","contentType","get","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.a5a5dfc8.chunk.js","sourcesContent":["var _g;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgOffline(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 122.88 122.87\",\n    style: {\n      enableBackground: \"new 0 0 122.88 122.87\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.04,53.31c-0.78,0.67-1.76,0.96-2.7,0.88c-0.91-0.07-1.8-0.48-2.46-1.21c-0.06-0.06-0.11-0.12-0.16-0.19 c-0.61-0.76-0.87-1.69-0.8-2.59c0.07-0.91,0.48-1.8,1.21-2.46c0.05-0.05,0.11-0.1,0.17-0.15c6.55-5.6,13.53-9.85,20.76-12.68 c7.31-2.87,14.86-4.3,22.48-4.23c6.18,0.05,12.37,1.09,18.48,3.15l-5.96,5.97c-4.18-1.09-8.39-1.65-12.57-1.69 c-6.67-0.06-13.33,1.22-19.79,3.77C35.2,44.42,28.94,48.25,23.04,53.31L23.04,53.31z M67.48,0.28c-0.96-0.09-1.95-0.16-2.97-0.21 C63.54,0.02,62.52,0,61.44,0c-1.08,0-2.1,0.02-3.06,0.07c-1.02,0.05-2.01,0.12-2.97,0.21c-0.95,0.09-1.93,0.21-2.95,0.36 c-1,0.15-2.01,0.32-3.02,0.52c-0.96,0.19-1.93,0.41-2.89,0.65c-1,0.25-1.96,0.52-2.88,0.8c-1.01,0.31-1.97,0.62-2.89,0.95 c-0.96,0.34-1.88,0.69-2.76,1.06l-0.14,0.06c-0.93,0.39-1.85,0.79-2.73,1.21c-0.92,0.43-1.8,0.88-2.64,1.33 c-0.87,0.46-1.74,0.96-2.62,1.49c-0.87,0.52-1.73,1.07-2.56,1.62c-0.8,0.53-1.6,1.1-2.41,1.7c-0.78,0.58-1.58,1.2-2.4,1.87 c-0.8,0.65-1.57,1.31-2.3,1.97c-0.75,0.68-1.47,1.36-2.15,2.04L18,17.98c-0.73,0.73-1.44,1.48-2.13,2.23 c-0.66,0.73-1.31,1.48-1.93,2.24c-0.63,0.77-1.25,1.56-1.86,2.38c-0.6,0.81-1.18,1.64-1.74,2.48c-0.56,0.83-1.1,1.69-1.62,2.56 c-0.52,0.87-1.02,1.75-1.48,2.61c-0.46,0.86-0.91,1.76-1.35,2.69c-0.43,0.91-0.84,1.83-1.22,2.74l-0.01,0.03 c-0.4,0.97-0.77,1.91-1.1,2.84c-0.34,0.94-0.65,1.89-0.94,2.83c-0.28,0.91-0.54,1.86-0.78,2.85c-0.24,0.96-0.46,1.95-0.66,2.97 c-0.2,1-0.38,2.01-0.52,3.01c-0.15,0.99-0.27,1.95-0.36,2.87L0.28,55.4c-0.09,0.96-0.17,1.95-0.21,2.97C0.02,59.33,0,60.35,0,61.43 c0,1.08,0.02,2.1,0.07,3.06c0.05,1.02,0.12,2,0.21,2.96c0.09,0.96,0.22,1.95,0.37,2.97c0.15,1,0.32,2,0.52,3 c0.2,1.02,0.42,2.01,0.66,2.97c0.25,0.99,0.51,1.94,0.79,2.85c0.28,0.92,0.59,1.87,0.95,2.85c0.33,0.93,0.69,1.87,1.09,2.83 c0.77,1.87,1.63,3.69,2.58,5.46c0.95,1.78,1.98,3.5,3.1,5.17c1.11,1.67,2.31,3.28,3.59,4.83c1.28,1.56,2.64,3.06,4.08,4.49 l0.62,0.63c0.53,0.51,1.05,1.01,1.58,1.48c0.71,0.64,1.47,1.3,2.28,1.96c0.77,0.63,1.56,1.25,2.38,1.86 c0.81,0.6,1.64,1.18,2.47,1.74c0.84,0.56,1.69,1.1,2.57,1.63c0.88,0.53,1.75,1.02,2.62,1.49c0.86,0.46,1.76,0.91,2.69,1.35 c0.71,0.34,1.43,0.66,2.15,0.96l0.62,0.26c0.97,0.4,1.92,0.77,2.85,1.1c0.9,0.32,1.84,0.63,2.82,0.93 c0.91,0.28,1.86,0.54,2.86,0.79c0.96,0.24,1.94,0.46,2.96,0.66c1,0.2,2,0.37,3,0.52c1.02,0.15,2,0.27,2.94,0.37 c0.96,0.09,1.95,0.17,2.97,0.21c0.97,0.05,2,0.07,3.08,0.07c1.08,0,2.11-0.02,3.07-0.07c1.02-0.05,2.01-0.12,2.97-0.21 c0.95-0.09,1.93-0.22,2.95-0.37c1-0.15,2-0.32,3-0.52c1.01-0.2,1.99-0.42,2.95-0.66c0.76-0.19,1.5-0.39,2.21-0.59v-0.01l0.63-0.19 c0.96-0.29,1.92-0.61,2.89-0.95c0.95-0.34,1.86-0.69,2.74-1.05l0.98-0.43l0.01,0.01c0.64-0.28,1.28-0.57,1.9-0.86 c0.91-0.43,1.8-0.88,2.65-1.33c0.87-0.46,1.74-0.96,2.61-1.48c0.87-0.52,1.73-1.07,2.57-1.63c0.84-0.56,1.67-1.14,2.48-1.75 c0.82-0.6,1.61-1.22,2.38-1.85c0.78-0.64,1.54-1.3,2.28-1.97c0.73-0.66,1.46-1.36,2.19-2.09s1.43-1.46,2.09-2.19 c0.64-0.71,1.29-1.47,1.96-2.28c0.63-0.77,1.25-1.56,1.86-2.38c0.6-0.82,1.19-1.65,1.75-2.49c0.56-0.84,1.1-1.69,1.63-2.57 c0.53-0.88,1.02-1.75,1.49-2.62c0.46-0.86,0.91-1.76,1.35-2.68c0.43-0.91,0.84-1.83,1.21-2.74l0.01-0.03 c0.4-0.97,0.77-1.92,1.1-2.84c0.34-0.94,0.65-1.89,0.94-2.83c0.28-0.91,0.54-1.86,0.79-2.85c0.24-0.96,0.46-1.95,0.66-2.96 c0.2-1,0.38-2.01,0.52-3.01c0.15-0.99,0.27-1.95,0.36-2.87l0.01-0.08c0.09-0.96,0.17-1.95,0.21-2.97c0.05-0.96,0.07-1.99,0.07-3.07 c0-1.08-0.02-2.1-0.07-3.06c-0.05-1.02-0.12-2.01-0.21-2.97l-0.01-0.08c-0.09-0.92-0.21-1.88-0.36-2.88 c-0.15-1-0.32-2.01-0.52-3.01c-0.2-1.02-0.42-2.01-0.66-2.96c-0.25-1-0.51-1.95-0.79-2.86c-0.29-0.95-0.61-1.9-0.94-2.85 c-0.34-0.94-0.7-1.89-1.09-2.83c-0.38-0.92-0.79-1.84-1.22-2.76c-0.44-0.93-0.89-1.83-1.35-2.69c-0.46-0.87-0.96-1.74-1.48-2.62 c-0.52-0.87-1.06-1.72-1.62-2.56c-0.56-0.84-1.15-1.67-1.75-2.49c-0.61-0.82-1.22-1.61-1.85-2.38c-0.6-0.74-1.25-1.49-1.94-2.24 c-0.66-0.73-1.37-1.47-2.12-2.21c-0.74-0.74-1.47-1.44-2.21-2.11c-0.74-0.67-1.5-1.33-2.29-1.97c-0.76-0.63-1.56-1.24-2.37-1.85 c-0.81-0.6-1.63-1.18-2.46-1.74c-0.83-0.56-1.69-1.1-2.56-1.62c-0.88-0.52-1.75-1.02-2.62-1.48c-0.86-0.46-1.75-0.91-2.68-1.35 c-0.9-0.43-1.8-0.82-2.7-1.2l-0.08-0.03c-0.97-0.4-1.91-0.77-2.84-1.1c-0.94-0.34-1.88-0.65-2.82-0.93 c-0.91-0.28-1.86-0.54-2.86-0.79c-0.96-0.24-1.95-0.46-2.96-0.66c-1-0.2-2.01-0.37-3-0.52C69.41,0.5,68.43,0.38,67.48,0.28 L67.48,0.28z M31.83,100.1l71.61-71.61L106,32.4c0.2,0.31,0.44,0.68,0.71,1.12l0.24,0.39l0.01-0.01l0.47,0.81 c0.2,0.34,0.41,0.71,0.64,1.14c0.23,0.43,0.46,0.85,0.67,1.25c0.29,0.56,0.57,1.12,0.83,1.68c0.27,0.58,0.52,1.12,0.74,1.64 c0.21,0.49,0.44,1.04,0.67,1.66c0.22,0.57,0.44,1.16,0.65,1.76c0.25,0.7,0.47,1.4,0.68,2.09c0.2,0.67,0.4,1.39,0.6,2.17 c0.2,0.78,0.37,1.51,0.52,2.2c0.15,0.72,0.29,1.45,0.42,2.17c0.13,0.77,0.24,1.51,0.33,2.24c0.09,0.73,0.17,1.46,0.23,2.2 c0.06,0.71,0.11,1.47,0.14,2.26c0.03,0.79,0.05,1.54,0.05,2.24c0,0.81-0.02,1.67-0.07,2.58c-0.04,0.87-0.11,1.75-0.2,2.65 c-0.09,0.92-0.2,1.79-0.31,2.62c-0.13,0.87-0.27,1.71-0.43,2.53c-0.16,0.83-0.35,1.67-0.56,2.51c-0.14,0.56-0.29,1.11-0.45,1.66 l0.02,0l-0.27,0.88c-0.23,0.77-0.51,1.59-0.81,2.44c-0.3,0.84-0.62,1.65-0.94,2.44c-0.33,0.79-0.68,1.59-1.05,2.37 c-0.36,0.76-0.76,1.54-1.17,2.32c-0.42,0.79-0.85,1.55-1.29,2.28c-0.45,0.74-0.91,1.48-1.4,2.2c-0.48,0.72-0.98,1.43-1.5,2.12 c-0.52,0.69-1.05,1.38-1.62,2.06c-0.57,0.69-1.15,1.37-1.75,2.03c-0.62,0.69-1.21,1.31-1.77,1.87c-1.17,1.17-2.48,2.35-3.9,3.52 c-0.68,0.56-1.37,1.1-2.06,1.61c-0.69,0.51-1.4,1.02-2.13,1.5c-0.72,0.48-1.45,0.94-2.18,1.39c-0.73,0.44-1.49,0.87-2.28,1.29 c-0.8,0.43-1.59,0.83-2.36,1.19c-0.79,0.37-1.57,0.72-2.36,1.05l-0.03,0.01c-0.81,0.33-1.63,0.65-2.45,0.95 c-0.85,0.31-1.66,0.58-2.42,0.81c-0.8,0.24-1.63,0.47-2.5,0.69c-0.84,0.21-1.69,0.4-2.55,0.57c-0.82,0.16-1.67,0.31-2.54,0.43 c-0.83,0.12-1.71,0.23-2.62,0.32c-0.9,0.09-1.79,0.15-2.65,0.2c-0.9,0.04-1.75,0.07-2.56,0.07c-0.7,0-1.44-0.02-2.23-0.05 s-1.54-0.08-2.26-0.14c-0.69-0.06-1.42-0.13-2.2-0.23c-0.77-0.1-1.51-0.21-2.23-0.33c-0.72-0.12-1.45-0.26-2.17-0.41 c-0.69-0.15-1.43-0.32-2.21-0.52c-0.78-0.2-1.5-0.4-2.16-0.6c-0.68-0.2-1.38-0.43-2.1-0.69c-0.6-0.21-1.18-0.42-1.75-0.64 c-0.61-0.24-1.17-0.46-1.66-0.67c-0.52-0.22-1.06-0.47-1.64-0.74c-0.56-0.26-1.12-0.54-1.69-0.83c-0.38-0.2-0.78-0.41-1.21-0.64 c-0.42-0.23-0.82-0.45-1.18-0.67c-0.45-0.26-0.85-0.5-1.2-0.72c-0.41-0.26-0.79-0.49-1.12-0.71l-3.92-2.56L31.83,100.1L31.83,100.1 z M94.84,25.41l-72.4,72.4l-2.65-3.34c-0.34-0.42-0.68-0.88-1.04-1.36c-0.34-0.46-0.68-0.94-1.03-1.43 c-0.34-0.49-0.66-0.96-0.96-1.43l-0.48-0.76l-0.01,0l-0.42-0.7c-0.37-0.61-0.73-1.24-1.08-1.87c-0.35-0.64-0.68-1.27-1-1.9 L13.79,85c-0.3-0.6-0.6-1.24-0.89-1.9c-0.29-0.64-0.57-1.31-0.84-1.99c-0.3-0.74-0.59-1.51-0.87-2.33 c-0.27-0.76-0.52-1.57-0.77-2.43c-0.23-0.8-0.45-1.62-0.65-2.45c-0.2-0.83-0.38-1.65-0.53-2.46c-0.15-0.81-0.29-1.64-0.41-2.47 c-0.11-0.8-0.21-1.64-0.29-2.52c-0.08-0.88-0.15-1.74-0.19-2.58c-0.04-0.87-0.06-1.7-0.06-2.47c0-0.81,0.02-1.67,0.07-2.57 c0.04-0.87,0.11-1.75,0.2-2.66c0.09-0.92,0.2-1.8,0.32-2.63c0.13-0.87,0.27-1.71,0.43-2.53c0.17-0.85,0.36-1.7,0.57-2.55 c0.22-0.87,0.45-1.7,0.69-2.5l0.19-0.63h0.02c0.2-0.64,0.41-1.26,0.62-1.85c0.28-0.79,0.59-1.59,0.93-2.41 c0.34-0.81,0.69-1.61,1.05-2.38c0.36-0.77,0.76-1.55,1.18-2.34c0.42-0.79,0.85-1.55,1.29-2.28c0.45-0.74,0.91-1.48,1.4-2.2 c0.48-0.72,0.98-1.43,1.5-2.12c0.51-0.69,1.05-1.38,1.62-2.07c0.55-0.67,1.12-1.34,1.72-1.99c0.51-0.57,1.03-1.11,1.54-1.63v-0.02 l0.26-0.26c0.56-0.56,1.18-1.15,1.87-1.77c0.65-0.59,1.33-1.17,2.02-1.74c0.68-0.56,1.38-1.1,2.07-1.62 c0.69-0.51,1.4-1.02,2.13-1.5c0.75-0.5,1.48-0.97,2.2-1.4c0.72-0.44,1.47-0.86,2.23-1.27c0.76-0.41,1.53-0.8,2.31-1.17 c0.53-0.25,1.06-0.49,1.59-0.72l0.84-0.35c0.79-0.33,1.59-0.64,2.4-0.93c0.77-0.28,1.6-0.55,2.5-0.82 c0.88-0.27,1.73-0.51,2.54-0.71c0.84-0.21,1.67-0.4,2.5-0.56c0.82-0.16,1.67-0.31,2.53-0.43c0.83-0.12,1.71-0.23,2.63-0.32 c0.9-0.09,1.79-0.15,2.65-0.2c0.9-0.05,1.76-0.07,2.56-0.07c0.78,0,1.61,0.02,2.49,0.06c0.83,0.04,1.69,0.1,2.58,0.19 c0.88,0.08,1.73,0.18,2.53,0.29c0.83,0.12,1.65,0.25,2.46,0.41c0.81,0.15,1.63,0.33,2.45,0.53c0.83,0.2,1.65,0.42,2.45,0.65 c0.84,0.24,1.63,0.5,2.39,0.76c0.75,0.26,1.54,0.55,2.36,0.88c0.68,0.27,1.35,0.56,2.02,0.85c0.71,0.32,1.34,0.61,1.9,0.89 c0.63,0.31,1.26,0.65,1.9,1c0.64,0.35,1.27,0.72,1.89,1.09c0.44,0.26,0.91,0.56,1.42,0.89c0.51,0.33,1,0.66,1.46,0.98 c0.49,0.34,0.96,0.68,1.42,1.02c0.44,0.33,0.9,0.68,1.35,1.04l3.34,2.65L94.84,25.41L94.84,25.41z M96.38,41.98 c2.82,1.89,5.6,4.03,8.32,6.41l0.11,0.1c0.71,0.67,1.1,1.55,1.15,2.45c0.06,0.95-0.24,1.92-0.91,2.69 c-0.04,0.04-0.06,0.07-0.1,0.11c-0.67,0.7-1.55,1.09-2.45,1.15c-0.95,0.06-1.92-0.24-2.69-0.91c-2.88-2.51-5.82-4.72-8.8-6.63 L96.38,41.98L96.38,41.98z M61.44,83.06c2.25,0,4.28,0.91,5.75,2.38c1.47,1.47,2.38,3.51,2.38,5.75c0,2.25-0.91,4.28-2.38,5.75 l-0.09,0.08c-1.46,1.42-3.46,2.3-5.66,2.3c-2.25,0-4.28-0.91-5.75-2.38l-0.08-0.09c-1.42-1.47-2.3-3.46-2.3-5.66 c0-2.24,0.91-4.27,2.39-5.75l0,0C57.16,83.97,59.19,83.06,61.44,83.06L61.44,83.06z M71.01,67.36l0.12,0.04 c3.09,1.19,6.12,2.98,9.05,5.37c0.8,0.65,1.26,1.56,1.35,2.5c0.1,0.94-0.17,1.93-0.81,2.72l-0.01,0.01 c-0.65,0.79-1.55,1.25-2.49,1.34c-0.94,0.1-1.93-0.17-2.72-0.81l-0.01,0c-2.28-1.86-4.6-3.24-6.93-4.16 c-1.18-0.46-2.36-0.81-3.53-1.03L71.01,67.36L71.01,67.36z M35.61,66.66c-0.06,0.06-0.12,0.12-0.19,0.16 c-0.75,0.61-1.66,0.88-2.56,0.82c-0.92-0.06-1.82-0.45-2.5-1.18l0,0c-0.06-0.06-0.12-0.13-0.16-0.19 c-0.61-0.75-0.88-1.66-0.82-2.56c0.06-0.92,0.45-1.82,1.18-2.5l0,0c0.05-0.05,0.11-0.1,0.17-0.14c4.91-4.33,9.97-7.6,15.14-9.78 c5.2-2.19,10.5-3.27,15.84-3.18c1.25,0.02,2.5,0.11,3.75,0.26l-7.31,7.31c-3.2,0.32-6.4,1.17-9.57,2.53 C44.19,60.08,39.85,62.91,35.61,66.66L35.61,66.66z M83.31,55.06c3.05,1.95,6.06,4.33,9.04,7.13c0.75,0.7,1.14,1.64,1.17,2.6 c0.03,0.95-0.3,1.91-1.01,2.65c-0.7,0.75-1.64,1.14-2.6,1.17c-0.95,0.03-1.91-0.3-2.66-1.01c-3.1-2.92-6.22-5.29-9.35-7.14 L83.31,55.06L83.31,55.06z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgOffline);\nexport default __webpack_public_path__ + \"static/media/offline.ca61d621.svg\";\nexport { ForwardRef as ReactComponent };","type WeatherApiType = {\n   id: number,\n   icon: string,\n   date: string,\n   temperature: string\n}\n\ntype WeatherType = {\n   weather: [{ icon: string }];\n   dt: number;\n   temp: {\n      day: number;\n   };\n}\n\nexport default class WeatherApiService {\n   _apiKey: string = '9f794cbee16169a67f1379107a9a4b6e';\n   _baseURL: string = 'https://api.openweathermap.org/data/2.5/onecall';\n\n   symbolOfWeather = (temperature: number) => {\n      if (temperature - 273.15 > 0) {\n         return '+';\n      } else if (temperature - 273.15 < 0) {\n         return '-';\n      } else {\n         return '';\n      }\n   }\n\n   fetchFromServer = async (urlToFetch: string) => {\n      const dataFromServer = await fetch(urlToFetch);\n\n      if (!dataFromServer.ok) {\n         throw new Error(`Could not fetch ${dataFromServer}, received ${dataFromServer.status}`);\n      }\n\n      return await dataFromServer.json();\n   }\n\n   getWeatherForSevenDays = async (lat: number, lon: number): Promise<WeatherApiType[]> => {\n      const weatherForSevenDaysUrl: string = `${this._baseURL}?lat=${lat}&lon=${lon}&&exclude=current,minutely,hourly,alerts&appid=${\n         this._apiKey\n      }`;\n\n      const weatherDataForSevenDaysJson = await this.fetchFromServer(weatherForSevenDaysUrl);\n      const weatherForSevenDaysArrays = weatherDataForSevenDaysJson.daily;\n\n      return weatherForSevenDaysArrays.map((day: WeatherType) => {\n         const symbolOfWeather: string = this.symbolOfWeather(day.temp.day);\n         return {\n            id: day.dt,\n            icon: `https://openweathermap.org/img/wn/${day.weather.find(el => el.icon)?.icon}@2x.png`,\n            date: new Date(day.dt * 1000)\n               .toLocaleString(\"en\", {year: 'numeric', month: 'short', day: \"numeric\"})\n               .split(', ')\n               .join(' '),\n            temperature: symbolOfWeather + Math.round(day.temp.day - 273.15).toString() + '°'\n         };\n      });\n   }\n\n   getWeatherForHistoricDate = async (lat: number, lon: number, date: number) => {\n      const weatherForHistoricDateUrlToFetch: string = `${this._baseURL}/timemachine?lat=${lat}&lon=${lon}&dt=${date}&appid=${this._apiKey}`;\n      try {\n         const weatherForHistoricDateJson = await this.fetchFromServer(weatherForHistoricDateUrlToFetch);\n         const weatherOfHistoricDay = weatherForHistoricDateJson.current;\n         const symbolOfWeather: string = this.symbolOfWeather(weatherOfHistoricDay.temp);\n\n         return {\n            icon: `https://openweathermap.org/img/wn/${weatherOfHistoricDay.weather[0].icon}@2x.png`,\n            date: new Date(weatherOfHistoricDay.dt * 1000).toLocaleString(\"en\",\n               {year: 'numeric', month: 'short', day: \"numeric\"}).split(', ').join(' '),\n            temperature: `${symbolOfWeather}${Math.round(weatherOfHistoricDay.temp - 273.15).toString()}°`\n         };\n      } catch (error) {\n         console.error(error);\n         return {\n            icon: '',\n            date: '',\n            temperature: ''\n         }\n      }\n   }\n}","import React from 'react';\nimport './title.scss';\n\nconst Title: React.FC = () => {\n   return (\n      <div className='title'>\n         <div className='title__item title__item-1'>Weather</div>\n         <div className='title__item title__item-2'>forecast</div>\n      </div>\n   )\n}\n\nexport default Title;","import React, {useState} from 'react';\nimport {CityType} from \"../../app/app\";\nimport './select-city.scss';\n\nexport type SelectCitiesTypeProps = {\n   cities: CityType[],\n   onChangeLocation: (coords: string, blockSelect: number) => void,\n   blockSelect: number\n}\n\nconst SelectCity: React.FC<SelectCitiesTypeProps> = ({cities, onChangeLocation, blockSelect}) => {\n   const [isActive, setIsActive] = useState<boolean>(false);\n\n   const changeLocationHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n      onChangeLocation(event.target.value, blockSelect);\n      event.target.blur();\n   };\n\n   let styleClass: string = 'select-city__wrapper';\n   if (isActive) {\n      styleClass += ' active';\n   } else {\n      styleClass = 'select-city__wrapper';\n   }\n\n\n   return (\n      <div className={styleClass}>\n         <select className='select select-city'\n                 onFocus={(): void => setIsActive(true)}\n                 onBlur={(): void => setIsActive(false)}\n                 onChange={changeLocationHandler}>\n            <option hidden>Select city</option>\n            {cities.map(city => <option key={city.lat}\n                                        value={`${city.lat}, ${city.lon}`}>{city.name}</option>\n            )}\n         </select>\n      </div>\n   );\n};\n\nexport default SelectCity;\n\n\n","export default __webpack_public_path__ + \"static/media/placeholder.11f24048.svg\";","import React from 'react';\nimport placeholder from '../../assets/img/placeholder.svg';\nimport './placeholder.scss';\n\nconst Placeholder: React.FC = () => {\n   return (\n      <div className='placeholder'>\n         <img className='placeholder__image' src={placeholder} alt=\"cloud\"/>\n         <p className='placeholder__text'>Fill in all the fields and the weather will be displayed</p>\n      </div>\n   );\n};\n\nexport default Placeholder;","export default __webpack_public_path__ + \"static/media/arrow-left.315d589a.svg\";","import React from \"react\";\nimport arrowLeft from \"../../../assets/img/icons/arrow-left.svg\";\nimport '../forecast.scss';\n\ntype LeftArrowTypeProps = {\n  scrollToThePrevForecast?: () => void,\n}\n\nconst LeftArrowBlock: React.FC<LeftArrowTypeProps> = ({\n                                                        scrollToThePrevForecast\n                                                      }) => {\n   return (\n      <div onClick={scrollToThePrevForecast}\n           className=\"weather-blocks__arrow-left\">\n         <img src={arrowLeft} alt=\"arrow-left\"/>\n      </div>\n   );\n};\n\nexport default LeftArrowBlock;","export default __webpack_public_path__ + \"static/media/arrow-right.a9596e4c.svg\";","import React from \"react\";\nimport arrowRight from \"../../../assets/img/icons/arrow-right.svg\";\nimport '../forecast.scss';\n\ntype RightArrowTypeProps = {\n  scrollToTheNextForecast?: () => void,\n}\n\nconst RightArrowBlock: React.FC<RightArrowTypeProps> = ({\n                                                          scrollToTheNextForecast\n                                                      }) => {\n   return (\n      <div onClick={scrollToTheNextForecast}\n           className=\"weather-blocks__arrow-right\">\n         <img src={arrowRight} alt=\"arrow-right\"/>\n      </div>\n   );\n};\n\nexport default RightArrowBlock;","import React from \"react\";\nimport './seven-days-weather-card.scss';\nimport './historic-weather-card.scss';\n\ntype WeatherTypeProps = {\n  date: string,\n  icon: string,\n  temperature: string,\n}\n\ntype WhichCardRenderTypeProp = {\n  blockSelect: number\n}\n\nconst WeatherCard: React.FC<WeatherTypeProps & WhichCardRenderTypeProp> = ({date, icon, temperature, blockSelect}) => {\n  if (blockSelect === 0) {\n    return <WeeklyCard date={date} icon={icon} temperature={temperature}/>\n  } else {\n    return <HistoricCard date={date} icon={icon} temperature={temperature}/>\n  }\n};\n\nconst WeeklyCard: React.FC<WeatherTypeProps> = ({date, icon, temperature}) => {\n  return (\n    <div className='weather-card'>\n      <div className=\"weather-card__flex\">\n        <div className=\"weather-card__date\">{date}</div>\n        <img className='weather-card__image' src={icon} alt=\"\"/>\n        <div className=\"weather-card__temp\">{temperature}</div>\n      </div>\n    </div>\n  );\n}\n\nconst HistoricCard: React.FC<WeatherTypeProps> = ({date, icon, temperature}) => {\n  const image = icon ? <img className='historic-weather-card__image' src={icon} alt=\"\"/> : null;\n  const text = date\n    ? <div className=\"historic-weather-card__date\">{date}</div>\n    : <div className=\"error-text\">Please enter last 5 days or choose from calendar</div>\n\n  return (\n    <div className='historic-weather-card'>\n      <div className=\"historic-weather-card__flex\">\n        {text}\n        {image}\n        <div className=\"historic-weather-card__temp\">{temperature}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default WeatherCard;","import React from \"react\";\nimport {WeatherInfoType} from \"../../app/app\";\nimport LeftArrowBlock from \"../left-arrow/left-arrow\";\nimport RightArrowBlock from \"../right-arrow/right-arrow\";\nimport WeatherCard from \"../../weather-cards/weather-card\";\nimport '../forecast.scss';\n\ntype WeatherType = {\n   sevenDaysWeatherData?: WeatherInfoType[],\n   showAllWeatherCardsForSevenDays?: boolean,\n   onPreviousDay?: () => void,\n   onNextDay?: () => void,\n   blockSelect: number\n}\n\nconst Weather: React.FC<WeatherType> = ({\n                                           sevenDaysWeatherData,\n                                           showAllWeatherCardsForSevenDays,\n                                           onPreviousDay,\n                                           onNextDay,\n                                           blockSelect\n                                        }) => {\n\n   const leftArrow = showAllWeatherCardsForSevenDays ? null : <LeftArrowBlock scrollToThePrevForecast={onPreviousDay}/>;\n   const rightArrow = showAllWeatherCardsForSevenDays ? null : <RightArrowBlock scrollToTheNextForecast={onNextDay}/>;\n\n   return (\n      <div className='weather-blocks'>\n         {leftArrow}\n         {\n            sevenDaysWeatherData!.map((obj: WeatherInfoType) => {\n               return <WeatherCard key={obj.id}\n                                   date={obj.date}\n                                   icon={obj.icon}\n                                   temperature={obj.temperature}\n                                   blockSelect={blockSelect}/>\n            })\n         }\n         {rightArrow}\n      </div>\n   );\n};\n\nexport default Weather;","import React, {useState} from 'react';\nimport './select-date.scss';\n\ntype SelectDatePropsType = {\n  onChangeDate?: (date: number) => void\n}\n\nconst SelectDate: React.FC<SelectDatePropsType> = ({onChangeDate}) => {\n  const [isFocused, setIsFocused] = useState<boolean>(false);\n\n  const oneDay = 86400000;\n  const minDays = new Date(Date.now() - oneDay * 5).toISOString().slice(0, 10);\n  const maxDays = new Date().toISOString().slice(0, 10);\n\n  const dateChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const date = Date.parse(event.target.value) / 1000;\n    if (onChangeDate) {\n      onChangeDate(date);\n    }\n  };\n\n  const opacityStyle = isFocused ? 0 : 1;\n\n  return (\n    <div className='select-date__wrapper'>\n      <input type=\"text\"\n             className='select select-date__placeholder'\n             placeholder=\"Select date\"\n             style={{opacity: opacityStyle}}/>\n      <input className='select select-date'\n             type=\"date\"\n             min={minDays}\n             max={maxDays}\n             onChange={dateChangeHandler}\n             onFocus={() => setIsFocused(true)}\n             onBlur={() => setIsFocused(false)}\n             onInput={() => setIsFocused(true)}/>\n    </div>\n  );\n};\n\nexport default SelectDate;","import React from 'react';\nimport {CityType, WeatherInfoType} from \"../app/app\";\nimport SelectCity from '../selectors/select-city/select-city';\nimport Placeholder from '../placeholder/placeholder';\nimport Weather from './weather/weather';\nimport WeatherCard from \"../weather-cards/weather-card\";\nimport SelectDate from \"../selectors/select-date/select-date\";\nimport './forecast.scss';\n\ntype ForecastTypeProps = {\n  cities: CityType[],\n  onChangeLocation: (coords: string, blockSelect: number) => void,\n  title: string\n  blockSelect: number\n  sevenDaysWeatherData?: WeatherInfoType[],\n  onPreviousDay?: () => void,\n  onNextDay?: () => void,\n  showAllWeatherCardsForSevenDays?: boolean,\n  showHistoricForecast?: boolean,\n  showSevenDaysForecast?: boolean,\n  onChangeDate?: (date: number) => void,\n  historicWeatherData?: WeatherInfoType,\n}\n\nconst Forecast: React.FC<ForecastTypeProps> = ({\n                                                 sevenDaysWeatherData,\n                                                 showSevenDaysForecast,\n                                                 cities,\n                                                 onChangeLocation,\n                                                 onPreviousDay,\n                                                 onNextDay,\n                                                 showAllWeatherCardsForSevenDays,\n                                                 title,\n                                                 blockSelect,\n                                                 showHistoricForecast,\n                                                 historicWeatherData,\n                                                 onChangeDate\n                                               }) => {\n\n  if (blockSelect === 0) {\n    return <WeeklyForecast sevenDaysWeatherData={sevenDaysWeatherData}\n                           showSevenDaysForecast={showSevenDaysForecast}\n                           cities={cities}\n                           onChangeLocation={onChangeLocation}\n                           onPreviousDay={onPreviousDay}\n                           onNextDay={onNextDay}\n                           showAllWeatherCardsForSevenDays={showAllWeatherCardsForSevenDays}\n                           title={title}\n                           blockSelect={blockSelect}/>\n  } else {\n    return <HistoricForecast title={title}\n                             cities={cities}\n                             onChangeLocation={onChangeLocation}\n                             blockSelect={blockSelect}\n                             showHistoricForecast={showHistoricForecast}\n                             historicWeatherData={historicWeatherData}\n                             onChangeDate={onChangeDate}/>\n  }\n};\n\nconst WeeklyForecast: React.FC<ForecastTypeProps> = ({\n                                                       sevenDaysWeatherData,\n                                                       showSevenDaysForecast,\n                                                       cities,\n                                                       onChangeLocation,\n                                                       onPreviousDay,\n                                                       onNextDay,\n                                                       showAllWeatherCardsForSevenDays,\n                                                       title,\n                                                       blockSelect,\n                                                     }) => {\n  const weather = showSevenDaysForecast\n    ? <Weather sevenDaysWeatherData={sevenDaysWeatherData}\n               onNextDay={onNextDay}\n               onPreviousDay={onPreviousDay}\n               showAllWeatherCardsForSevenDays={showAllWeatherCardsForSevenDays}\n               blockSelect={blockSelect}/>\n    : <Placeholder/>;\n\n  return (\n    <section className='card'>\n      <div className='card__content'>\n        <div className='card__content-header'>\n          <h2 className='card__content-title'>{title}</h2>\n          <SelectCity onChangeLocation={onChangeLocation}\n                      cities={cities}\n                      blockSelect={blockSelect}/>\n        </div>\n        <div>\n          {weather}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nconst HistoricForecast: React.FC<ForecastTypeProps> = ({\n                                                         cities,\n                                                         onChangeLocation,\n                                                         blockSelect,\n                                                         showHistoricForecast,\n                                                         historicWeatherData,\n                                                         onChangeDate,\n                                                         title\n                                                       }) => {\n  const weatherOrPlaceholder = showHistoricForecast\n    ? <WeatherCard date={historicWeatherData!.date}\n                   icon={historicWeatherData!.icon}\n                   temperature={historicWeatherData!.temperature}\n                   blockSelect={blockSelect}/>\n    : <Placeholder/>;\n\n  return (\n    <section className='card'>\n      <div className='card__content'>\n        <div className='card__content-header'>\n          <h2 className='card__content-title'>{title}</h2>\n          <div className=\"card__select\">\n            <SelectCity cities={cities}\n                        onChangeLocation={onChangeLocation}\n                        blockSelect={blockSelect}/>\n            <SelectDate onChangeDate={onChangeDate}/>\n          </div>\n        </div>\n        <div>\n          {weatherOrPlaceholder}\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Forecast;","import React, {useState, useEffect} from \"react\";\nimport {ReactComponent as OfflineIcon} from './offline.svg';\nimport './online-status.scss';\n\nconst OnlineStatus: React.FC = () => {\n\tconst [isOnline, setIsOnline] = useState(true);\n\n    function handleNetworkChange(): void {\n        if (navigator.onLine) {\n            setIsOnline(true);\n        } else {\n            setIsOnline(false);\n        }\n    }\n\n     useEffect(() => {\n        handleNetworkChange();\n        window.addEventListener('online', handleNetworkChange);\n        window.addEventListener('offline', handleNetworkChange);\n    }, [])\n\n\n\treturn (\n\t\t<div className='offline'>\n\t\t\t {!isOnline && <OfflineIcon/>}\n\t\t</div>\n\t);\n};\n\nexport default OnlineStatus;","import React, {useEffect, useState} from 'react';\nimport WeatherApiService from \"../../api/api\";\nimport Title from '../title/title';\nimport Forecast from \"../forecast/forecast\";\nimport OnlineStatus from \"../online-status/online-status\";\nimport './app.scss';\n\nexport type CityType = {\n   name: string,\n   lat: number,\n   lon: number\n}\n\nexport type WeatherInfoType = {\n   id?: number,\n   date: string,\n   icon: string,\n   temperature: string\n}\n\ntype LocationType = {\n   lat: number | null,\n   lon: number | null,\n}\n\nfunction useWindowDimensions() {\n   const [width, setWidth] = React.useState<number>(window.innerWidth);\n   useEffect(() => {\n      window.addEventListener(\"resize\", updateWidth);\n      return () => window.removeEventListener(\"resize\", updateWidth);\n   });\n\n   const updateWidth = () => {\n      setWidth(window.innerWidth);\n   };\n   return width;\n}\n\nconst App: React.FC = () => {\n   const windowWidth = useWindowDimensions();\n   const citiesArray = [\n      {name: 'Самара', lat: 53.195873, lon: 50.100193},\n      {name: 'Тольятти', lat: 53.507836, lon: 49.420393},\n      {name: 'Саратов', lat: 51.533557, lon: 46.034257},\n      {name: 'Казань', lat: 55.796127, lon: 49.106405},\n      {name: 'Краснодар', lat: 45.035470, lon: 38.975313},\n      {name: 'Моё местоположение', lat: 0, lon: 0}\n   ];\n\n   const [cities] = useState<CityType[]>(citiesArray);\n   const [location, setLocation] = useState<LocationType[]>([{lat: null, lon: null}, {lat: null, lon: null}]);\n   const [date, setDate] = useState<number | null>(null);\n   const [sevenDaysWeatherData, setSevenDaysWeatherData] = useState<WeatherInfoType[]>([]);\n   const [historicWeatherData, setHistoricWeatherData] = useState<WeatherInfoType>({date: '', icon: '', temperature: ''});\n   const [showSevenDaysForecast, setShowSevenDaysForecast] = useState<boolean>(false);\n   const [showHistoricForecast, setShowHistoricForecast] = useState<boolean>(false);\n   const [showAllWeatherCardsForSevenDays, setShowAllWeatherCardsForSevenDays] = useState<boolean>(false);\n   const [weatherDays, setWeatherDays] = useState<number>(0);\n\n   const [locationForSevenDaysWeather, locationForHistoricWeather] = location;\n\n   useEffect(() => {\n      const lat = locationForSevenDaysWeather.lat;\n      const lon = locationForSevenDaysWeather.lon;\n\n      if (lat && lon) {\n         const weatherService = new WeatherApiService();\n\n         weatherService.getWeatherForSevenDays(lat, lon)\n            .then(response => {\n               setSevenDaysWeatherData([]);\n               if (showAllWeatherCardsForSevenDays) {\n                  setSevenDaysWeatherData(response);\n               } else {\n                  setSevenDaysWeatherData(response.slice(weatherDays, 3 + weatherDays));\n               }\n               setShowSevenDaysForecast(true);\n            })\n      }\n   }, [locationForSevenDaysWeather, weatherDays, showAllWeatherCardsForSevenDays])\n\n   useEffect(() => {\n      const lat = locationForHistoricWeather.lat;\n      const lon = locationForHistoricWeather.lon;\n\n      if (lat && lon && date) {\n         const weatherService = new WeatherApiService();\n         weatherService.getWeatherForHistoricDate(lat, lon, date)\n            .then(historicForecast => {\n               setHistoricWeatherData(historicForecast);\n               setShowHistoricForecast(true);\n            })\n      }\n   }, [locationForHistoricWeather, date])\n\n   useEffect(() => {\n      if (windowWidth <= 660) {\n         setShowAllWeatherCardsForSevenDays(true);\n      } else {\n         setShowAllWeatherCardsForSevenDays(false);\n      }\n   }, [windowWidth])\n\n   const changeLocationHandler = (coords: string, blockSelect: number) => {\n\n      function setNewLocation(latitude: string, longitude: string) {\n         const newLocation = {\n            lat: +latitude,\n            lon: +longitude\n         };\n\n         setLocation(prevState => prevState.map(el => {\n            if (el === prevState[blockSelect]) {\n               return newLocation;\n            }\n            return el;\n         }));\n      }\n\n      const [latitude, longitude] = coords.split(', ');\n\n      if (+latitude === 0 && +longitude === 0) {\n         if (\"geolocation\" in navigator) {\n            console.log('Geolocation is ready to use');\n            navigator.geolocation.getCurrentPosition(function(position) {\n               console.log(position.coords.latitude, position.coords.longitude);\n               setNewLocation(position.coords.latitude.toString(), position.coords.longitude.toString());\n            });\n         } else {\n            console.log('Geolocation is not supported on your device...');\n         }\n      } else {\n         setNewLocation(latitude, longitude);\n      }\n   };\n\n   const nextDayHandler = () => {\n      if (0 <= weatherDays && weatherDays < 5) {\n         setWeatherDays(prevState => ++prevState);\n      }\n   };\n\n   const previousDayHandler = () => {\n      if (0 < weatherDays && weatherDays <= 5) {\n         setWeatherDays(prevState => --prevState);\n      }\n   };\n\n   return (\n      <div className='app'>\n         <div className='_container'>\n            <header className='app__title'>\n               <Title/>\n\t\t\t\t\t<OnlineStatus/>\n            </header>\n            <main className='app__blocks'>\n               <Forecast cities={cities}\n                         title={'7 Days Forecast'}\n                         showSevenDaysForecast={showSevenDaysForecast}\n                         onChangeLocation={changeLocationHandler}\n                         onPreviousDay={previousDayHandler}\n                         onNextDay={nextDayHandler}\n                         showAllWeatherCardsForSevenDays={showAllWeatherCardsForSevenDays}\n                         sevenDaysWeatherData={sevenDaysWeatherData}\n                         blockSelect={0}/>\n\n               <Forecast cities={cities}\n                         title={'Forecast for a Date in the Past'}\n                         showHistoricForecast={showHistoricForecast}\n                         onChangeLocation={changeLocationHandler}\n                         onChangeDate={(date: number) => setDate(date)}\n                         historicWeatherData={historicWeatherData}\n                         blockSelect={1}/>\n            </main>\n         </div>\n      </div>\n   );\n};\n\nexport default App;","import {ReportHandler} from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n   if (onPerfEntry && onPerfEntry instanceof Function) {\n      import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n         getCLS(onPerfEntry);\n         getFID(onPerfEntry);\n         getFCP(onPerfEntry);\n         getLCP(onPerfEntry);\n         getTTFB(onPerfEntry);\n      });\n   }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.0/8 are considered localhost for IPv4.\n\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://cra.link/PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://cra.link/PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n   <React.StrictMode>\n      <App/>\n   </React.StrictMode>,\n   document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}