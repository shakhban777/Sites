{"version":3,"sources":["components/result/result.jsx","components/buttons/operation/operation-element.jsx","components/buttons/operation/operation.jsx","components/buttons/numeric/numeric-element.jsx","components/buttons/numeric/numeric.jsx","components/buttons/buttons.jsx","components/app/app.jsx","index.js"],"names":["Result","props","className","result","OperationElement","name","oper","onClick","getOperation","operations","Operation","map","operation","NumericElement","num","getNumber","numbers","Numeric","number","Buttons","App","state","dotPressed","finishedCalculate","firstNumber","currentOperation","reverseNum","addNumber","addDot","addNewNumber","clean","equal","del","operationSet","this","toString","endsWith","setState","endsWithOperation","res","slice","secondNumber","split","Function","calc","deleteOperation","parseFloat","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b00e856e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './result.scss';\r\n\r\nconst Result = (props) => (\r\n   <div className='result'>\r\n      <span>{props.result}</span>\r\n   </div>\r\n);\r\n\r\nexport default Result;","import React from 'react';\r\nimport './operation.scss';\r\n\r\nconst OperationElement = (props) => (\r\n   <div\r\n      name={props.oper}\r\n      className='operationElement button'\r\n      onClick={() => props.getOperation(props.oper)}>\r\n         {props.oper}\r\n   </div>\r\n);\r\n\r\nexport default OperationElement;","import React from 'react';\r\nimport './operation.scss';\r\nimport OperationElement from \"./operation-element\";\r\n\r\nconst operations = ['<=', 'C', '/', '*', '-', '+', '='];\r\n\r\nconst Operation = (props) => (\r\n   <div className='operation'>\r\n      {operations.map(operation => <OperationElement\r\n         key={operation}\r\n         oper={operation}\r\n         getOperation={props.getOperation}/>\r\n      )}\r\n   </div>\r\n);\r\n\r\nexport default Operation;","import React from 'react';\r\nimport './numeric.scss';\r\n\r\nconst NumericElement = (props) => (\r\n   <div\r\n      name={props.num}\r\n      className='numericElement button'\r\n      onClick={() => props.getNumber(props.num)}>\r\n         {props.num}\r\n   </div>\r\n);\r\n\r\nexport default NumericElement;","import React from 'react';\r\nimport './numeric.scss';\r\nimport NumericElement from \"./numeric-element\";\r\n\r\nconst numbers = [7, 8, 9, 4, 5, 6, 1, 2, 3, '.', 0, '±'];\r\n\r\nconst Numeric = (props) => (\r\n   <div className='numeric'>\r\n      {numbers.map(number => <NumericElement\r\n         key={number}\r\n         num={number}\r\n         getNumber={props.getNumber}\r\n      />)}\r\n   </div>\r\n);\r\n\r\nexport default Numeric;","import React from 'react';\r\nimport './buttons.scss';\r\nimport Operation from \"./operation/operation\";\r\nimport Numeric from \"./numeric/numeric\";\r\n\r\nconst Buttons = (props) => {\r\n   return (\r\n      <div className='buttons'>\r\n         <Numeric\r\n            result={props.result}\r\n            getNumber={props.getNumber}/>\r\n         <Operation\r\n            getOperation={props.getOperation}/>\r\n      </div>\r\n   );\r\n}\r\n\r\n\r\nexport default Buttons;","import React, {Component} from \"react\";\r\nimport Result from \"../result/result\";\r\nimport Buttons from \"../buttons/buttons\";\r\nimport './app.scss';\r\n\r\nclass App extends Component {\r\n   state = {\r\n      result: 0,\r\n      dotPressed: false,\r\n      finishedCalculate: false,\r\n      firstNumber: null,\r\n      currentOperation: null\r\n   };\r\n\r\n   endsWithOperation() {\r\n      return this.state.result.toString().endsWith('/') || this.state.result.toString().endsWith('*')\r\n         || this.state.result.toString().endsWith('-') || this.state.result.toString().endsWith('+');\r\n   }\r\n\r\n   addNewNumber(num) {\r\n      this.setState({result: num, finishedCalculate: false});\r\n   }\r\n\r\n   addNumber(num) {\r\n      this.setState({result: this.state.result.toString() + num, finishedCalculate: false});\r\n   }\r\n\r\n   reverseNum() {\r\n      if (this.state.result.toString().endsWith('.')) this.setState({dotPressed: false});\r\n      if (!this.state.currentOperation) this.setState({result: -this.state.result});\r\n   }\r\n\r\n   addDot(num) {\r\n      if (!this.state.result || this.state.finishedCalculate) {\r\n         this.setState({result: `0.`, dotPressed: true});\r\n      } else if (this.endsWithOperation()) {\r\n         this.setState({result: `${this.state.result}0.`, dotPressed: true});\r\n      } else {\r\n         this.setState({result: this.state.result.toString() + num, dotPressed: true});\r\n      }\r\n      this.setState({finishedCalculate: false});\r\n   }\r\n\r\n   getNumber = (num) => {\r\n      if ((!this.state.result || this.state.finishedCalculate) && num !== '.' && num !== '±') {\r\n         this.addNewNumber(num);\r\n      } else if (num === '±' && this.state.result) {\r\n         this.reverseNum();\r\n      } else if (num === '.' && !this.state.dotPressed) {\r\n         this.addDot(num);\r\n      } else if (num !== '.' && num !== '±'){\r\n         this.addNumber(num);\r\n      }\r\n   }\r\n\r\n   clean() {\r\n      this.setState({result: 0, dotPressed: false, finishedCalculate: false, currentOperation: null});\r\n   }\r\n\r\n   del() {\r\n      let res = this.state.result.toString().slice(0, -1);\r\n      if (!res) res = 0;\r\n      this.setState({result: res});\r\n   }\r\n\r\n   equal() {\r\n      if (this.state.currentOperation) {\r\n         const secondNumber = +(this.state.result.split(this.state.currentOperation)[1]);\r\n         // eslint-disable-next-line no-new-func\r\n         const calc = new Function('a', 'b', `return parseFloat((a ${this.state.currentOperation} b).toFixed(5))`);\r\n         const res = calc(this.state.firstNumber, secondNumber);\r\n         this.setState({result: res, finishedCalculate: true, currentOperation: null});\r\n         return res;\r\n      }\r\n   }\r\n\r\n   operationSet(operation) {\r\n      if (this.state.currentOperation && !this.state.finishedCalculate && this.endsWithOperation()) {\r\n         let oldResult = this.state.result;\r\n         let deleteOperation = oldResult.slice(0, -1);\r\n         this.setState({\r\n            result: deleteOperation + operation,\r\n            dotPressed: false,\r\n            currentOperation: operation\r\n         })\r\n      } else if (this.state.currentOperation && !this.endsWithOperation()) {\r\n         let res = this.equal();\r\n\r\n         this.setState({\r\n            firstNumber: parseFloat(res),\r\n            currentOperation: operation,\r\n            dotPressed: false,\r\n            result: res + operation,\r\n            finishedCalculate: false\r\n         });\r\n      } else {\r\n         this.setState({\r\n            firstNumber: +this.state.result,\r\n            dotPressed: false,\r\n            result: this.state.result + operation,\r\n            currentOperation: operation,\r\n            finishedCalculate: false\r\n         });\r\n      }\r\n   }\r\n\r\n   getOperation = (operation) => {\r\n      if (operation === 'C') {\r\n         this.clean();\r\n      } else if (operation === '=') {\r\n         this.equal();\r\n      } else if (operation === '<=') {\r\n         this.del();\r\n      } else if (operation === '/' || operation === '*' || operation === '+' || operation === '-') {\r\n         this.operationSet(operation);\r\n      }\r\n   }\r\n\r\n   render() {\r\n      const {result} = this.state;\r\n      return (\r\n         <div className='wrapper'>\r\n            <div className='app'>\r\n               <Result result={result}/>\r\n               <Buttons result={result}\r\n                        getNumber={this.getNumber}\r\n                        getOperation={this.getOperation}/>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from '../src/components/app/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}